{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Tokens": {
				"properties": {
					"accessToken": {
						"type": "string"
					},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"accessToken",
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Profile.Exclude_keyofProfile.salt-or-password__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"username",
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Profile.salt-or-password_": {
				"$ref": "#/components/schemas/Pick_Profile.Exclude_keyofProfile.salt-or-password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"ProfileDto": {
				"properties": {
					"id": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"tokens": {
						"$ref": "#/components/schemas/Tokens"
					}
				},
				"required": [
					"id",
					"username",
					"name",
					"tokens"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateProfileDto": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthDto": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WireguardClient": {
				"properties": {
					"id": {
						"type": "string"
					},
					"enabled": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					},
					"publicKey": {
						"type": "string"
					},
					"privateKey": {
						"type": "string"
					},
					"preSharedKey": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"allowedIPs": {
						"type": "string"
					},
					"latestHandshakeAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"transferRx": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"transferTx": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"persistentKeepalive": {
						"type": "string",
						"nullable": true
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"enabled",
					"name",
					"publicKey",
					"address",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "wireguard-server",
		"version": "1.0.0",
		"description": "Wireguard API",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Epifanov Andrei",
			"email": "epifanovmd@gmail.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/auth/signUp": {
			"post": {
				"operationId": "SignUp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProfileDto"
								}
							}
						}
					}
				},
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateProfileDto"
							}
						}
					}
				}
			}
		},
		"/api/auth/signIn": {
			"post": {
				"operationId": "SignIn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProfileDto"
								}
							}
						}
					}
				},
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthDto"
							}
						}
					}
				}
			}
		},
		"/api/auth/refresh": {
			"post": {
				"operationId": "Refresh",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tokens"
								}
							}
						}
					}
				},
				"tags": [
					"Authorization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"refreshToken": {
										"type": "string"
									}
								},
								"required": [
									"refreshToken"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/wireguard/start": {
			"get": {
				"operationId": "StartVpn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/wireguard/stop": {
			"get": {
				"operationId": "StopVpn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/wireguard/status": {
			"get": {
				"operationId": "CheckStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"nullable": true
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/wireguard/clients": {
			"get": {
				"operationId": "GetClients",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/WireguardClient"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/wireguard/client": {
			"get": {
				"operationId": "GetClient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WireguardClient"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "clientId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateClient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WireguardClient"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/wireguard/client/qrcode": {
			"get": {
				"operationId": "GetClientQRCodeSVG",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "clientId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/wireguard/client/configuration": {
			"get": {
				"operationId": "GetClientConfiguration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "clientId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/wireguard/client/{clientId}": {
			"delete": {
				"operationId": "DeleteClient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "clientId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateClient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WireguardClient"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "clientId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"address": {
										"type": "string"
									},
									"name": {
										"type": "string"
									}
								},
								"required": [
									"address",
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/wireguard/client/enable": {
			"post": {
				"operationId": "EnableClient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WireguardClient"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"clientId": {
										"type": "string"
									}
								},
								"required": [
									"clientId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/wireguard/client/disable": {
			"post": {
				"operationId": "DisableClient",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/WireguardClient"
								}
							}
						}
					}
				},
				"tags": [
					"Wireguard"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"clientId": {
										"type": "string"
									}
								},
								"required": [
									"clientId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:8181/"
		}
	]
}